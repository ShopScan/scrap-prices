# Compose specification file  â€“ SIN 'version:'
services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      retries: 5

  airflow-webserver:
    build: ./airflow          # usa la imagen custom que incluye Playwright
    container_name: airflow-web
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor     # suficiente para tareas async
      AIRFLOW__WEBSERVER__SECRET_KEY: "REEMPLAZAME"
      AIRFLOW__core__LOAD_EXAMPLES: "False"
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt   # instala deps extra al arrancar
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --password admin \
                             --firstname Admin --lastname User --role Admin \
                             --email admin@example.com || true
        pip install --no-cache-dir -r /requirements.txt ;
        exec airflow webserver
      "

  airflow-scheduler:
    build: ./airflow
    container_name: airflow-scheduler
    restart: unless-stopped
    depends_on:
      airflow-webserver:
        condition: service_started
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && exec airflow scheduler"

  airflow-triggerer:        # necesario para tareas deferrables/async
    build: ./airflow
    container_name: airflow-triggerer
    restart: unless-stopped
    depends_on:
      airflow-webserver:
        condition: service_started
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: airflow triggerer

volumes:
  postgres-data:
